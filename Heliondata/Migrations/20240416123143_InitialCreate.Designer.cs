// <auto-generated />
using System;
using Heliondata.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Heliondata.Migrations
{
    [DbContext(typeof(HelionDBContext))]
    [Migration("20240416123143_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Heliondata.Models.Company", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CUI")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("Heliondata.Models.Employee", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext");

                    b.Property<string>("Position")
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Heliondata.Models.JoinModels.EmployeeProcess", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("ProcessId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ProcessId");

                    b.ToTable("EmployeeProcess");
                });

            modelBuilder.Entity("Heliondata.Models.JoinModels.ProcessService", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ProcessId")
                        .HasColumnType("int");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ProcessId");

                    b.HasIndex("ServiceId");

                    b.ToTable("ProcessService");
                });

            modelBuilder.Entity("Heliondata.Models.JoinModels.ProcessWorkplace", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ProcessId")
                        .HasColumnType("int");

                    b.Property<int>("WorkplaceId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ProcessId");

                    b.HasIndex("WorkplaceId");

                    b.ToTable("ProcessWorkplace");
                });

            modelBuilder.Entity("Heliondata.Models.Process", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CompanyID")
                        .HasColumnType("int");

                    b.Property<string>("ESignature")
                        .HasColumnType("longtext");

                    b.Property<string>("GPSLocation")
                        .HasColumnType("longtext");

                    b.Property<int>("RepresentativeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SignDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("ID");

                    b.HasIndex("CompanyID");

                    b.HasIndex("RepresentativeId");

                    b.ToTable("Processes");
                });

            modelBuilder.Entity("Heliondata.Models.Representative", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CompanyID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext");

                    b.Property<string>("Position")
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.HasIndex("CompanyID");

                    b.ToTable("Representatives");
                });

            modelBuilder.Entity("Heliondata.Models.Service", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("Heliondata.Models.Workplace", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("longtext");

                    b.Property<string>("City")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Zone")
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("Workplaces");
                });

            modelBuilder.Entity("Heliondata.Models.JoinModels.EmployeeProcess", b =>
                {
                    b.HasOne("Heliondata.Models.Employee", "Employee")
                        .WithMany("EmployeeProcesses")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Heliondata.Models.Process", "Process")
                        .WithMany("EmployeeProcesses")
                        .HasForeignKey("ProcessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Process");
                });

            modelBuilder.Entity("Heliondata.Models.JoinModels.ProcessService", b =>
                {
                    b.HasOne("Heliondata.Models.Process", "Process")
                        .WithMany("ProcessServices")
                        .HasForeignKey("ProcessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Heliondata.Models.Service", "Service")
                        .WithMany()
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Process");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("Heliondata.Models.JoinModels.ProcessWorkplace", b =>
                {
                    b.HasOne("Heliondata.Models.Process", "Process")
                        .WithMany("ProcessWorkplaces")
                        .HasForeignKey("ProcessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Heliondata.Models.Workplace", "Workplace")
                        .WithMany()
                        .HasForeignKey("WorkplaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Process");

                    b.Navigation("Workplace");
                });

            modelBuilder.Entity("Heliondata.Models.Process", b =>
                {
                    b.HasOne("Heliondata.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyID");

                    b.HasOne("Heliondata.Models.Representative", "Representative")
                        .WithMany("Processes")
                        .HasForeignKey("RepresentativeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("Representative");
                });

            modelBuilder.Entity("Heliondata.Models.Representative", b =>
                {
                    b.HasOne("Heliondata.Models.Company", null)
                        .WithMany("Representatives")
                        .HasForeignKey("CompanyID");
                });

            modelBuilder.Entity("Heliondata.Models.Company", b =>
                {
                    b.Navigation("Representatives");
                });

            modelBuilder.Entity("Heliondata.Models.Employee", b =>
                {
                    b.Navigation("EmployeeProcesses");
                });

            modelBuilder.Entity("Heliondata.Models.Process", b =>
                {
                    b.Navigation("EmployeeProcesses");

                    b.Navigation("ProcessServices");

                    b.Navigation("ProcessWorkplaces");
                });

            modelBuilder.Entity("Heliondata.Models.Representative", b =>
                {
                    b.Navigation("Processes");
                });
#pragma warning restore 612, 618
        }
    }
}
